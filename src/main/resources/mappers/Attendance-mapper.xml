<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="attendance">

<select id="CountSelect" parameterType="string" resultType="map">
    SELECT start_status AS status, COUNT(*) AS cnt
    FROM attendance
    WHERE member_id = #{value}
      AND start_status IS NOT NULL
    GROUP BY start_status

    UNION ALL

    SELECT end_status AS status, COUNT(*) AS cnt
    FROM attendance
    WHERE member_id = #{value}
      AND end_status IS NOT NULL
    GROUP BY end_status
    
</select>




<select id="getToday" parameterType="string" resultType="map">
  SELECT *
    FROM (
        SELECT
            start_status AS startStatus,
            end_status AS endStatus,
            TO_CHAR(start_time, 'HH24:MI') AS startTime,
            TO_CHAR(end_time, 'HH24:MI') AS endTime
        FROM attendance
        WHERE member_id = #{value}
          AND TRUNC(start_time) = TRUNC(SYSDATE)
        ORDER BY start_time DESC
    )
    WHERE ROWNUM = 1

</select>

<select id="selectMonthWorkDays" parameterType="string" resultType="int">
    SELECT 
        (
            -- 출근한 날
            SELECT COUNT(DISTINCT TRUNC(start_time))
            FROM attendance
            WHERE member_id = #{value}
              AND start_time IS NOT NULL
              AND TRUNC(start_time) BETWEEN TRUNC(SYSDATE, 'MM') AND TRUNC(SYSDATE)
        )
        +
        (
            -- 승인된 휴가일
            SELECT COUNT(*)
            FROM (
                SELECT TRUNC(start_leave_time + LEVEL - 1)
                FROM leave_request
                WHERE member_id = #{value}
                  AND status = 'APPROVED'
                  AND TRUNC(start_leave_time + LEVEL - 1) BETWEEN TRUNC(SYSDATE, 'MM') AND TRUNC(SYSDATE)
                CONNECT BY LEVEL  <![CDATA[ <= ]]>  TRUNC(end_leave_time) - TRUNC(start_leave_time) + 1
            )
        )
    FROM dual
</select>





<insert id="autoAbsence">
    INSERT INTO attendance (seq, member_id,start_status)
    SELECT attendance_seq.nextval, m.id, 'absence'
    FROM member m
    WHERE m.status = '재직자'
      AND NOT EXISTS (
          SELECT 1
          FROM attendance a
          WHERE a.member_id = m.id
            AND TRUNC(a.start_time) = TRUNC(SYSDATE)  
      )
</insert>

<insert id="insertCheckIn">
Insert into attendance(seq,member_id,start_time,start_status)
values (attendance_seq.nextval,#{member_id},SYSTIMESTAMP,#{start_status})
</insert>

<update id="exitCheckIn">
UPDATE attendance
SET end_time = SYSTIMESTAMP,
    end_status = #{end_status}
WHERE member_id = #{member_id}
  AND end_time IS NULL
</update>

<update id="autoNoCheck">
update attendance set end_time=SYSTIMESTAMP,
end_status='nocheck'
where end_time is null
and start_time is not null
</update>


<update id="updateLateFormAbsence" parameterType="string">
UPDATE attendance
SET start_time = SYSTIMESTAMP,
    start_status = 'late'
WHERE member_id = #{value}
  AND start_status = 'absence'
  AND end_status IS NULL
  AND (start_time IS NULL OR TRUNC(start_time) = TRUNC(SYSDATE))
</update>

</mapper>